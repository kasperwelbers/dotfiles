// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "bindings": {
      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",
      "ctrl-alt-h": "vim::ResizePaneLeft",
      "ctrl-alt-j": "vim::ResizePaneDown",
      "ctrl-alt-k": "vim::ResizePaneUp",
      "ctrl-alt-l": "vim::ResizePaneRight",
      "ctrl-b": "workspace::ToggleLeftDock",
      "ctrl-c": "editor::Copy",
      "ctrl-a": "editor::SelectAll",

      "ctrl-shift-backspace": "repl::ClearOutputs",

      // default vim, but so that it also works in terminal
      "ctrl-w s": "pane::SplitHorizontal",
      "ctrl-w v": "pane::SplitVertical",
      "ctrl-w c": "pane::CloseActiveItem",
      // add window commands for hiding docks
      "ctrl-w h": "workspace::ToggleLeftDock",
      "ctrl-w l": "workspace::ToggleRightDock",
      "ctrl-w j": "workspace::ToggleBottomDock",

      // for quick closing of panes, (and overriding that somehow default for terminal is to close zed entirely)
      "ctrl-q": "pane::CloseActiveItem"
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // "shift shift": "file_finder::Toggle"
    }
  },
  {
    "context": "Editor",
    "bindings": {
      // "j k": ["workspace::SendKeystrokes", "escape"]
    }
  },
  {
    "context": "vim_mode == normal || vim_mode == visual",
    "bindings": {
      "s": "vim::PushSneak",
      "shift-s": "vim::PushSneakBackward"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting",
    "bindings": {
      // Use space as leader key
      // SEARCH:
      "space s f": "file_finder::Toggle",
      "space s p": "project_panel::ToggleFocus",
      "space space": "project_symbols::Toggle",
      // DIAGNOSTICS
      "space q": "diagnostics::Deploy"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      "ctrl-shift-m": "agent::OpenActiveThreadAsMarkdown"
    }
  }
]
